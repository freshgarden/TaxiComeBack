@using TaxiCameBack.Core.Constants
@using TaxiCameBack.Website.Application.Extension
@using TaxiCameBack.Website.App_LocalResources
@model TaxiCameBack.Website.Areas.Admin.Models.MemberListViewModel
@{
    ViewBag.Title = AccountManager.title;
}
<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index")"><i class="fa fa-dashboard"></i> @HomeBackEnd.home_breadcrumb</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Info boxes -->
    <div class="row">
        <div class="col-md-12">
            <div class="box box-default">
                <div class="box-body">
                    @using (Html.BeginForm("Index", "Account", FormMethod.Post))
                    {
                        <div class="input-group membersadminsearch">
                            @Html.TextBoxFor(x => Model.Search, new { @class = "form-control" })
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="submit">@AccountManager.btn_search</button>
                            </span>
                        </div>
                        @Html.HiddenFor(x => x.PageIndex)
                    }

                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>@AccountManager.edit_column_header</th>
                                <th>@AccountManager.user_column_header</th>
                                <th>@AccountManager.approve_column_header</th>
                                <th>@AccountManager.locked_acc_column_header</th>
                                @*                    <th>Roles</th>*@
                                <th>@AccountManager.delete_acc_column_header</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Users)
                            {
                                var disabled = user.Id == Model.Id;

                                <tr>
                                    <td>
                                        <a href="@Url.Action("Edit", new { user.Id })" class="btn-mvc">
                                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                                        </a>
                                    </td>
                                    <td>
                                        <strong>@Html.DisplayFor(modelItem => user.UserEmail)</strong>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => user.IsApproved)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => user.IsLockedOut)
                                    </td>
                                    @*                        <td>*@
                                    @*                            <span class="listrolecbholder">*@
                                    @*                                @foreach (var role in @Model.AllRoles)*@
                                    @*                                {*@
                                    @*                                    var showChecked = user.Roles.Contains(role.RoleName) ? "checked='checked'" : "";*@
                                    @*                                    var disablecb = disabled ? "disabled='disabled'" : "";*@
                                    @*                                    <span class="listrolecb">*@
                                    @*                                        <input type="radio" name="Roles-@user.UserId" value="@role.RoleName" @showChecked @disablecb /> @Html.Raw(role.RoleName)*@
                                    @*                                    </span>*@
                                    @*                                }*@
                                    @*                                <input type="hidden" id="userUserId" value="@user.UserRoleId" />*@
                                    @*                            </span>*@
                                    @*                        </td>*@
                                    <td>
                                        @if (!disabled)
                                        {
                                            <a href="@Url.Action("Delete", new { user.Id, p = Model.PageIndex, search = Model.Search})" class="btn-mvc">
                                                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                            </a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>


                    @if (Model.TotalPages > 1)
                    {
                        @Html.Pager(Convert.ToInt32(Model.PageIndex), AppConstants.AdminListPageSize, Convert.ToInt32(Model.TotalCount), new { search = Model.Search })
                    }

                </div>
            </div>
        </div>
    </div>
</section>