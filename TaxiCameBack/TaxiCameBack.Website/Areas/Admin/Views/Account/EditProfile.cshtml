@using TaxiCameBack.Core.Constants
@using TaxiCameBack.Website.Application
@using TaxiCameBack.Website.Models
@using TaxiCameBack.Website.App_LocalResources
@model TaxiCameBack.Website.Areas.Admin.Models.MemberViewModels.SelfMemberEditViewModel

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = UserProfile.user_profile_title;
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jasny-bootstrap/3.1.3/css/jasny-bootstrap.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jasny-bootstrap/3.1.3/js/jasny-bootstrap.min.js"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i>@HomeBackEnd.home_breadcrumb</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-3">
            <!-- Profile Image -->
            <div class="box box-primary">
                <div class="box-body box-profile">
                    <img id="imgProfile" class="profile-user-img img-responsive img-circle" src="@AppHelpers.MemberImage(Model.Id, Model.Avatar, Model.Email, AppConstants.AvatarProfileSize)" alt="User profile picture">
                    <h3 class="profile-username text-center">@Model.FullName</h3>
                    @if (Model.Id == 1)
                    {
                        <p class="text-muted text-center">@UserProfile.manager</p>
                    }
                    else
                    {
                        <p class="text-muted text-center">@UserProfile.drive</p>
                    }
                    <ul class="list-group list-group-unbordered">
                        <li class="list-group-item">
                            <b>@UserProfile.gender</b> <a class="pull-right">@Model.Gender</a>
                        </li>
                        <li class="list-group-item">
                            <b>@UserProfile.date_of_birth</b> <a class="pull-right">@Model.Day - @Model.Month - @Model.Year</a>
                        </li>
                        <li class="list-group-item">
                            <b>@UserProfile.phone</b> <a class="pull-right">
                                @{
                                    var phone = Model.PhoneNumber.Length == 10
                                        ? $"{Model.PhoneNumber.Substring(0, 3)}.{Model.PhoneNumber.Substring(3, 3)}.{Model.PhoneNumber.Substring(6, 4)}"
                                        : $"{Model.PhoneNumber.Substring(0, 4)}.{Model.PhoneNumber.Substring(4, 3)}.{Model.PhoneNumber.Substring(6, 4)}";
                                }
                                @phone
                            </a>
                        </li>
                        <li class="list-group-item">
                            <b>@UserProfile.email</b> <a class="pull-right">@Model.Email</a>
                        </li>
                        <li class="list-group-item">
                            <b>@UserProfile.plate_number</b> <a class="pull-right">@Model.CarNumber</a>
                        </li>
                        <li class="list-group-item">
                            <b>@UserProfile.car_branch</b> <a class="pull-right">@Model.Carmakers</a>
                        </li>
                    </ul>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
        <div class="col-md-9">
            <div class="nav-tabs-custom box box-default">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#editprofile" data-toggle="tab">@UserProfile.personal_info</a></li>
                    <li><a href="#changepassword" data-toggle="tab">@UserProfile.change_password</a></li>
                </ul>
                <div class="tab-content">
                    <!-- /.tab-pane -->
                    <div class="active tab-pane" id="editprofile">
                        @using (Html.BeginForm("EditProfile", "Account", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(x => Model.Id)
                            @Html.AntiForgeryToken()
                            if (ViewData.ModelState["ErrorMessage"] != null)
                            {
                                <div class="alert alert-danger" role="alert">
                                    <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                                    @Html.ValidationMessage("ErrorMessage")
                                </div>
                            }
                            <div class="form-group">
                                @Html.LabelFor(x => x.FullName, new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(x => x.FullName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.FullName, "", new { @class = "text-danger", @placeholder = UserProfile.full_name })
                                </div>
                            </div>

                                <div class="form-group">
                                    @Html.LabelFor(x => x.Email, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", type = "email", disabled = "disabled" })
                                        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(x => x.File, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        <input class="form-control" type="file" name="file" id="file" value="" onchange="loadFile(event)">
                                        @Html.ValidationMessageFor(x => x.File, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <script>
                                    var loadFile = function (event) {
                                        var reader = new FileReader();
                                        reader.onload = function () {
                                            var output = document.getElementById('imgProfile');
                                            output.src = reader.result;
                                        };
                                        reader.readAsDataURL(event.target.files[0]);
                                    };
                                </script>

                                <div class="form-group">
                                    @Html.LabelFor(x => x.Gender, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        <div class="radio">
                                            <label>
                                                @Html.RadioButtonFor(x => x.Gender, "Male")
                                                Nam
                                            </label>
                                            <label>
                                                @Html.RadioButtonFor(x => x.Gender, "Female")
                                                Nữ
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(x => x.DateOfBirth, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        <div class="row">
                                            <div class="col-xs-2">
                                                @Html.DropDownListFor(x => x.Day, Enumerable.Range(1, 31)
                                                    .Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), UserProfile.day, new { @class = "form-control" })
                                            </div>
                                            <div class="col-xs-2">
                                                @Html.DropDownListFor(x => x.Month, Enumerable.Range(1, 12)
                                                    .Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), UserProfile.month, new { @class = "form-control" })
                                            </div>
                                            <div class="col-xs-2">
                                                @Html.DropDownListFor(x => x.Year, Enumerable.Range(DateTime.Now.Year - 60, 40)
                                                    .Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), UserProfile.year, new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(x => x.Address, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(x => x.Address, new { @class = "form-control", @placeholder = UserProfile.address })
                                        @Html.ValidationMessageFor(x => x.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(x => x.PhoneNumber, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control", type = "number", @placeholder = UserProfile.phone })
                                        @Html.ValidationMessageFor(x => x.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(x => x.CarNumber, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(x => x.CarNumber, new { @class = "form-control", @placeholder = UserProfile.plate_number })
                                        @Html.ValidationMessageFor(x => x.CarNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(x => x.Carmakers, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(x => x.Carmakers, new { @class = "form-control", @placeholder = UserProfile.car_branch })
                                        @Html.ValidationMessageFor(x => x.Carmakers, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-sm-offset-2 col-sm-10">
                                        <button type="submit" class="btn btn-danger">@UserProfile.btn_update</button>
                                    </div>
                                </div>
                        }
                    </div>
                    <!-- /.tab-pane -->
                    <!-- /.tab-pane -->
                    <div class="tab-pane" id="changepassword">
                        @Html.Partial("_ChangePassword", new ChangePasswordViewModel())
                    </div>
                    <!-- /.tab-pane -->
                </div>
                <!-- /.tab-content -->
            </div>
            <!-- /.nav-tabs-custom -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->