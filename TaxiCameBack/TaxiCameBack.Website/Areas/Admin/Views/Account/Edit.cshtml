@using TaxiCameBack.Website.Application.Extension
@model TaxiCameBack.Website.Areas.Admin.Models.MemberEditViewModel
@using TaxiCameBack.Website.App_LocalResources
@{
    ViewBag.Title = (string.IsNullOrEmpty(Model.Id.ToString())) ? ApproveUser.add_user : ApproveUser.edit_user;
    var buttonText = (string.IsNullOrEmpty(Model.Id.ToString())) ? ApproveUser.btn_create : ApproveUser.btn_save;
}
<section class="content-header">
    <h1>
        @ApproveUser.user_profile
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> @HomeBackEnd.home_breadcrumb</a></li>
        <li><a href="#">@AccountManager.approve_column_header</a></li>
        <li class="active">@ApproveUser.user_profile</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <!-- Profile Image -->
            <div class="box box-primary">
                <div class="box-body box-profile">
                    @using (Html.BeginForm("Edit", "Account", FormMethod.Post))
                    {
                        @Html.HiddenFor(x => Model.Id)
                        @Html.AntiForgeryToken()
                        if (ViewData.ModelState["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger" role="alert">
                                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                                @Html.ValidationMessage("ErrorMessage")
                            </div>
                        }

                        <div class="form-group">
                            @Html.LabelFor(x => x.Email)
                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", type = "email", @readonly = "readonly" })
                            @Html.ValidationMessageFor(x => x.Email,"", new { @class = "text-danger" })
                        </div>

                                <h2>@ApproveUser.admin_specific</h2>

                                <div class="checkbox">
                                    @using (Html.BeginLabelFor(m => m.IsApproved, new { @class = "checkbox" }))
                {
                                        @Html.CheckBoxFor(m => m.IsApproved)
                                    }
                                    @Html.ValidationMessageFor(m => m.IsApproved, "", new { @class = "text-danger" })
                                </div>

                                <div class="checkbox">
                                    @using (Html.BeginLabelFor(m => m.IsLockedOut, new { @class = "checkbox" }))
                                    {
                                        @Html.CheckBoxFor(m => m.IsLockedOut)
                                    }
                                    @Html.ValidationMessageFor(m => m.IsLockedOut, "", new { @class = "text-danger" })
                                </div>

                                <div class="submit-holder">
                                    <input type="submit" class="btn btn-primary" value="@(buttonText)" />
                                    @if (Html.ValueFor(x => x.Id).ToString() != "1")
                                    {
                                        <a href="@Url.Action("Delete", new{Model.Id})" onclick="return confirm('Are you sure you want to delete @Model.Email?')" class="btn btn-danger" role="button">@ApproveUser.btn_delete</a>
                                    }
                                </div>
                    }

                </div>
            </div>
        </div>
    </div>
</section>