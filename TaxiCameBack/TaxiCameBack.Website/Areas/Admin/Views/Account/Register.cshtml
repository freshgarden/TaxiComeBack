@model TaxiCameBack.Website.Areas.Admin.Models.RegisterViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@Register.register_title</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <link rel="stylesheet" type="text/css" media="all" id="font_css" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro::400,700,800,300">
    @Styles.Render("~/admin/css")
    @Styles.Render("~/css/icheck")
    @Scripts.Render("~/admin/js")
    @Scripts.Render("~/js/icheck")
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body class="hold-transition register-page">
    <div class="register-box">
        <div class="register-logo">
            <a href="#"><img src="~/Content/Images/logo/logovnl_03.png" class="img-responsive center-block" alt="Logo" /></a>
        </div>
        <div class="register-box-body">
            <p class="login-box-msg">@Register.register_form</p>
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                if (ViewData.ModelState["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger" role="alert">
                        <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                        @Html.ValidationMessage("ErrorMessage")
                    </div>
                }
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", placeholder = Register.plc_fullname } })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = Register.plc_phone } })
                    <span class="glyphicon glyphicon-phone form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = Register.plc_email } })
                    <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = Register.plc_password } })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.RetypePassword, new { htmlAttributes = new { @class = "form-control", placeholder = Register.plc_re_password } })
                    <span class="glyphicon glyphicon-log-in form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.RetypePassword, "", new { @class = "text-danger" })
                </div>
                <div class="row">
                    <div class="col-xs-8">
                        <div class="checkbox icheck">
                            <label>
                                @Html.CheckBoxFor(model => model.AgreeTerm, "") @Register.lbl_agree_term
                            </label>
                        </div>
                        @Html.ValidationMessageFor(model => model.AgreeTerm, "", new { @class = "text-danger" })
                    </div>
                    <!-- /.col -->
                    <div class="col-xs-4">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">@Register.btn_register</button>
                    </div>
                    <!-- /.col -->
                </div>
            }
        </div>
        <!-- /.form-box -->
    </div>
    <!-- /.register-box -->
    <script>
        $(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' // optional
            });
        });
    </script>
</body>
</html>
