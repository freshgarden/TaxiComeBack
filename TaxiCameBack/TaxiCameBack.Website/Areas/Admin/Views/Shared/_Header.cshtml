@using TaxiCameBack.Website.Application.Security
@using TaxiCameBack.Core.Constants
@using TaxiCameBack.Website.Application

@Scripts.Render("~/js/signalr")
<!--Reference the autogenerated SignalR hub script. -->
<script src="@Scripts.Url("~/signalr/hubs")"></script>
<link href="@Url.Content("~/Content/bootstrap-notification/bootstrap-notifications.min.css")" rel="stylesheet" />
@if (SessionPersister.Roles.Contains(AppConstants.StandardMembers))
{
    <script type="text/javascript">
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var notification = $.connection.notificationHub;
            // Create a function that the hub can call back to display messages.
            notification.client.addRegisted = function () {
                updateNotificationCount();
            };
            notification.client.updateReceived = function () {
                updateNotification();
            }
            notification.client.updateResult = function (message) {
                window.alert(message);
            }
            // Start the connection.
            $.connection.hub.start().done(function () {
                console.log('Notification hub started');
                notification.server.addDriver("@SessionPersister.Username");
                $('#notifications-toggle').click(function (e) {
                    e.stopPropagation();
                    showNotificationPanel(true);
                    updateNotification();
                });
            });
            // hide notifications
            $('html').click(function () {
                showNotificationPanel(false);
            });

            window.receivedRide = function (notificationId, scheduleId, userId) {
                notification.server.received(notificationId, scheduleId, userId);
            }

            window.formatPhone = function (phonenumber) {
                if (!phonenumber) {
                    return "undefined";
                }

                if (phonenumber.toString().length === 10) {
                    return phonenumber.replace(/(\d\d\d)(\d\d\d)(\d\d\d\d)/, '$1.$2.$3');
                }
                return phonenumber.replace(/(\d\d\d\d)(\d\d\d)(\d\d\d\d)/, '$1.$2.$3');
            }

            window.toJavaScriptDate = function (value) {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return timeSince(dt);
            }

            window.timeSince = function (date) {

                var seconds = Math.floor((new Date() - date) / 1000);

                var interval = Math.floor(seconds / 31536000);

                if (interval > 1) {
                    return date.getDate() + "-" + (date.getMonth() + 1) + "-" + date.getFullYear();
                }
                interval = Math.floor(seconds / 2592000);
                if (interval > 1) {
                    return date.getDate() + "-" + (date.getMonth() + 1) + "-" + date.getFullYear();
                }
                interval = Math.floor(seconds / 86400);
                if (interval > 1) {
                    return interval + " ngày trước";
                }
                interval = Math.floor(seconds / 3600);
                if (interval > 1) {
                    return interval + " giờ trước";
                }
                interval = Math.floor(seconds / 60);
                if (interval > 1) {
                    return interval + " phút trước";
                }
                return Math.floor(seconds) + " giây trước";
            }

            // update notification
            function updateNotification() {
                $('#notifications-content').empty();
                $('#notifications-content').append($('<li>Loading...</li>'));
                $.ajax({
                    type: 'GET',
                    url: '/Schedule/GetNotifications',
                    success: function (response) {
                        $('#notifications-content').empty();
                        $('.count').attr('data-count', response[0].Total);
                        $('#totalNotification').html(response[0].totalNotification);
                        if (response.length === 0) {
                            $('#notifications-content').append($('<li><a href="#">Không có kết quả nào</a></li>'));
                        }
                        $.each(response, function (index, value) {
                            var scheduleLocation = "<b>Chuyến đi:</b> " + value.BeginLocation + " - " + value.EndLocation;
                            var nearLocation = "<b>Vị trí đón:</b> " + value.NearLocation;
                            var sType = value.Type === 0 ? '<span class="label label-primary">Khách hàng đặt xe</span>' : '<span class="label label-success">Tài xế đặt xe</span>';
                            var type = "<b>Loại:</b> " + sType;
                            var newNotification = $('<li class="notification"></li>');
                            var media = $('<div class="media"></div>');
                            var mediaBody = $('<div class="media-body"></div>');
                            var notificationTitle = $('<strong class="notification-title">' + value.CustomerFullname + ' - ' + formatPhone(value.CustomerPhoneNumber) + '</strong>');
                            var notificationDesc = $('<p class="notification-desc">' + scheduleLocation + '<br/>' + nearLocation + '<br/>' + type + '</p>');
                            var notificationMeta = $('<div class="notification-meta"></div>');
                            var timeStamp = $('<small class="timestamp">' + toJavaScriptDate(value.CreateDate) + '</small>');
                            var receiveButton = $('<button id="btnAccept" class="pull-right btn btn-success btn-md" onclick="receivedRide(\'' + value.Id + '\',\'' + value.ScheduleId + '\',\'' + value.ScheduleUserId + '\');">Nhận</button>');

                            mediaBody = mediaBody.append(notificationTitle).append(notificationDesc.append(notificationMeta.append(timeStamp).append(receiveButton)));
                            media = media.append(mediaBody);
                            $('#notifications-content').append(newNotification.append(media));
                        });
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            }

            // update notification count
            function updateNotificationCount() {
                var count = 0;
                count = parseInt($('.count').attr("data-count")) || 0;
                count++;
                $('.count').attr('data-count', count);
                showNotificationPanel(false);
            }

            $("#viewmore").click(function() {
                showNotificationPanel(false);
            });

            $.ajax({
                type: 'GET',
                url: '/Schedule/GetCountNotifications',
                success: function (response) {
                    if (response.length > 0) {
                        $('.count').attr('data-count', response);
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });

            window.showNotificationPanel = function(show) {
                var notificationPanel = document.getElementById("notifications");
                if (show) {
                    notificationPanel.classList.add("open");
                } else {
                    notificationPanel.classList.remove("open");
                }
            }
        });
    </script>
    <style>
        .dropdown-container {
            left: 50%;
            right: auto;
            text-align: center;
            transform: translate(-50%, 0);
        }
    </style>
}
<header class="main-header">
    <!-- Logo -->
    <a href="#" class="logo">
        <!-- mini logo for sidebar mini 50x50 pixels -->
        <span class="logo-mini"><b>TQV</b></span>
        <!-- logo for regular state and mobile devices -->
        <span class="logo-lg"><img src="~/Content/Images/logo/logovnl_03.png" class="img-responsive center-block" style="margin-top:5px;" alt="Logo" /></span>
    </a>
    <!-- Header Navbar: style can be found in header.less -->
    <nav class="navbar navbar-static-top">
        <!-- Sidebar toggle button-->
        <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button">
            <span class="sr-only">Toggle navigation</span>
        </a>
        <!-- Navbar Right Menu -->
        <div class="navbar-custom-menu">
            <ul class="nav navbar-nav">
                @if (SessionPersister.Roles.Contains(AppConstants.StandardMembers))
                {
                    <li class="dropdown dropdown-notifications" id="notifications">
                        <a href="#notifications-panel" class="dropdown-toggle" id="notifications-toggle">
                            <i data-count="" class="count glyphicon glyphicon-bell notification-icon"></i>
                        </a>

                        <div class="dropdown-container">

                            <div class="dropdown-toolbar">
@*                                <div class="dropdown-toolbar-actions">*@
@*                                    <a href="#">Mark all as read</a>*@
@*                                </div>*@
                                <h3 class="dropdown-toolbar-title">Notifications <i data-count="" class="count"></i></h3>
                            </div><!-- /dropdown-toolbar -->

                            <ul class="dropdown-menu" id="notifications-content">
                                <li class="notification">
                                    <div class="media">
                                        <div class="media-left">
                                            <div class="media-object">
                                                <img data-src="holder.js/50x50?bg=cccccc" class="img-circle" alt="50x50" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2250%22%20height%3D%2250%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2050%2050%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_156893b8992%20text%20%7B%20fill%3A%23919191%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_156893b8992%22%3E%3Crect%20width%3D%2250%22%20height%3D%2250%22%20fill%3D%22%23cccccc%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%227.5%22%20y%3D%2229.5%22%3E50x50%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E" data-holder-rendered="true" style="width: 50px; height: 50px;">
                                            </div>
                                        </div>
                                        <div class="media-body">
                                            <strong class="notification-title"><a href="#">Dave Lister</a> commented on <a href="#">DWARF-13 - Maintenance</a></strong>
                                            <p class="notification-desc">I totally don't wanna do it. Rimmer can do it.</p>

                                            <div class="notification-meta">
                                                <small class="timestamp">27. 11. 2015, 15:00</small>
                                            </div>
                                        </div>
                                    </div>
                                </li>

                            </ul>

                            <div class="dropdown-footer text-center">
                                <a id="viewmore" href="@Url.Action("Index", "Notification")">View <span id="totalNotification"></span> more...</a>
                            </div><!-- /dropdown-footer -->

                        </div><!-- /dropdown-container -->
                    </li>
                }

                <!-- User Account: style can be found in dropdown.less -->
                <li class="dropdown user user-menu">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                        @if (string.IsNullOrEmpty(SessionPersister.UserImageUrl))
                        {
                            <img src="~/Content/Images/default-user-image.png" class="user-image" alt="User Image">
                        }
                        else
                        {
                            <img src="@AppHelpers.MemberImage(SessionPersister.UserId, SessionPersister.UserImageUrl, SessionPersister.Username, AppConstants.AvatarProfileSize)" class="user-image" alt="User Image">
                        }
                        <span class="hidden-xs">@SessionPersister.Username</span>
                    </a>
                    <ul class="dropdown-menu">
                        <!-- User image -->
                        <li class="user-header">
                            @if (string.IsNullOrEmpty(SessionPersister.UserImageUrl))
                            {
                                <img src="~/Content/Images/default-user-image.png" class="img-circle" alt="User Image">
                            }
                            else
                            {
                                <img src="@AppHelpers.MemberImage(SessionPersister.UserId, SessionPersister.UserImageUrl, SessionPersister.Username, AppConstants.AvatarProfileSize)" class="img-circle" alt="User Image">
                            }
                            <p>
                                @if (string.IsNullOrEmpty(SessionPersister.FullName))
                                {
                                    @Header.default_full_name
                                }
                                else
                                {
                                    if (SessionPersister.Roles.Contains(AppConstants.AdminRoleName))
                                    {
                                        @(SessionPersister.FullName + " - " + @UserProfile.manager)
                                    }
                                    else
                                    {
                                        @(SessionPersister.FullName + " - " + @UserProfile.drive)
                                    }
                                }
                            </p>
                        </li>

                        <!-- Menu Footer-->
                        <li class="user-footer">
                            <div class="pull-left">
                                <a href="@Url.Action("EditProfile", "Account")" class="btn btn-default btn-flat">@Header.update_profile</a>
                            </div>
                            <div class="pull-right">
                                <a href="@Url.Action("LogOff", "Account", new { area = "" })" class="btn btn-default btn-flat">@Header.sign_out</a>
                            </div>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
    </nav>
</header>