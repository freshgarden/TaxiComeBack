@using TaxiCameBack.Website.Application.Security
@using TaxiCameBack.Core.Constants
@using TaxiCameBack.Website.Application

@Scripts.Render("~/js/signalr")
<!--Reference the autogenerated SignalR hub script. -->
<script src="@Scripts.Url("~/signalr/hubs")"></script>
@*<script src="~/signalr/hubs"></script>*@
@if (SessionPersister.Roles.Contains(AppConstants.StandardMembers))
{
    <script type="text/javascript">
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var notification = $.connection.notificationHub;
            // Create a function that the hub can call back to display messages.
            notification.client.addRegisted = function () {
                updateNotificationCount();
            };
            notification.client.updateReceived = function() {
                updateNotification();
            }
            notification.client.updateResult = function(message) {
                window.alert(message);
            }
            // Start the connection.
            $.connection.hub.start().done(function () {
                console.log('Notification hub started');
                notification.server.addDriver("@SessionPersister.Username");
                $('#notifications').click(function (e) {
                    e.stopPropagation();
                    $('.noti-content').show();
                    var count = 0;
                    count = parseInt($('span.count').html()) || 0;
                    //only load notification if not already loaded
//                    if (count > 0) {
                    updateNotification();
//                    }
                    //$('span.count', this).html('0');
                });
            });
            // hide notifications
            $('html').click(function () {
                $('.noti-content').hide();
            });

            window.receivedRide = function (notificationId, scheduleId, userId) {
                notification.server.received(notificationId, scheduleId, userId);
            }

            window.formatPhone = function (phonenumber) {
                if (!phonenumber) {
                    return "undefined";
                }

                if (phonenumber.toString().length === 10) {
                    return phonenumber.replace(/(\d\d\d)(\d\d\d)(\d\d\d\d)/, '$1.$2.$3');
                }
                return phonenumber.replace(/(\d\d\d\d)(\d\d\d)(\d\d\d\d)/, '$1.$2.$3');
            }

            window.toJavaScriptDate = function (value) {
                var pattern = /Date\(([^)]+)\)/;
                var results = pattern.exec(value);
                var dt = new Date(parseFloat(results[1]));
                return timeSince(dt);
            }

            window.timeSince = function (date) {

                var seconds = Math.floor((new Date() - date) / 1000);

                var interval = Math.floor(seconds / 31536000);

                if (interval > 1) {
                    return date.getDate() + "-" + (date.getMonth() + 1) + "-" + date.getFullYear();
                }
                interval = Math.floor(seconds / 2592000);
                if (interval > 1) {
                    return date.getDate() + "-" + (date.getMonth() + 1) + "-" + date.getFullYear();
                }
                interval = Math.floor(seconds / 86400);
                if (interval > 1) {
                    return interval + " days ago";
                }
                interval = Math.floor(seconds / 3600);
                if (interval > 1) {
                    return interval + " hours ago";
                }
                interval = Math.floor(seconds / 60);
                if (interval > 1) {
                    return interval + " minutes ago";
                }
                return Math.floor(seconds) + " seconds ago";
            }

            // update notification
            function updateNotification() {
                $('#notiContent').empty();
                $('#notiContent').append($('<li>Loading...</li>'));
                $.ajax({
                    type: 'GET',
                    url: '/Schedule/GetNotifications',
                    success: function (response) {
                        $('#notiContent').empty();
                        $('span.count').html(response.length);
                        if (response.length === 0) {
                            $('#notiContent').append($('<li><a href="#">No data available</a></li>'));
                        }
                        $.each(response, function (index, value) {
                            $('#notiContent').append($('<li><a href="#"><span><span>' + value.CustomerFullname + ' - ' + formatPhone(value.CustomerPhoneNumber) + '</span><span class="time">' + toJavaScriptDate(value.CreateDate) + '</span></span><span class="message">' + value.Message + '</span><button id="btnAccept" class="pull-right btn btn-success btn-xs" onclick="receivedRide(\'' + value.Id + '\',\'' + value.ScheduleId + '\',\'' + value.ScheduleUserId + '\');">Accept</button></a></li>'));
                        });
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            }

            // update notification count
            function updateNotificationCount() {
                var count = 0;
                count = parseInt($('span.count').html()) || 0;
                count++;
                $('span.count').html(count);
                $('.noti-content').hide();
            }

            $.ajax({
                type: 'GET',
                url: '/Schedule/GetCountNotifications',
                success: function (response) {
                    if (response.length > 0) {
                        $('span.count').html(response);
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });
    </script>
    <style>
        .noti-content {
            width: 360px;
            position: absolute;
            background: #fff;
            margin-top: 0;
            border: 1px solid #d9dee4;
            right: 0;
            left: auto;
        }
        .noti-content>li>a {
            color: #537a8e;
            display: block !important;
            clear: both !important;
            font-weight: 400 !important;
            line-height: 1.42857134 !important;
            white-space: normal
        }
        ul.noti-content li a {
            width: 100%;
            padding: 3px 5px !important;
        }
        .noti-content span {
            white-space: normal;
        }
        .navbar-nav>.notifications-menu>.dropdown-menu>li .menu>li>a, .navbar-nav>.messages-menu>.dropdown-menu>li .menu>li>a, .navbar-nav>.tasks-menu>.dropdown-menu>li .menu>li>a {
            color: #537a8e;
        }
        .navbar-nav>.notifications-menu>.dropdown-menu, .navbar-nav>.messages-menu>.dropdown-menu, .navbar-nav>.tasks-menu>.dropdown-menu {
            width: 330px;
        }
        .time {
            font-size: 11.5px;
            font-style: italic;
            font-weight: bold;
            position: absolute;
            right: 15px;
        }

        .message {
            display: block !important;
            font-size: 11.5px;
            font-family: inherit !important;
        }
    </style>
}
<header class="main-header">
    <!-- Logo -->
    <a href="#" class="logo">
        <!-- mini logo for sidebar mini 50x50 pixels -->
        <span class="logo-mini"><b>TQV</b></span>
        <!-- logo for regular state and mobile devices -->
        <span class="logo-lg"><b>Taxi Quay Ve</b></span>
    </a>
    <!-- Header Navbar: style can be found in header.less -->
    <nav class="navbar navbar-static-top">
        <!-- Sidebar toggle button-->
        <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button">
            <span class="sr-only">Toggle navigation</span>
        </a>
        <!-- Navbar Right Menu -->
        <div class="navbar-custom-menu">
            <ul class="nav navbar-nav">
                @if (SessionPersister.Roles.Contains(AppConstants.StandardMembers))
                {
                    <!-- Notifications: style can be found in dropdown.less -->
                    <li class="dropdown notifications-menu">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" id="notifications">
                            <i class="fa fa-bell-o"></i>
                            <span class="label label-warning"><span class="count">&nbsp;</span></span>
                        </a>
                        <ul class="dropdown-menu noti-content">
                            <li>
                                <!-- inner menu: contains the actual data -->
                                <ul class="menu" id="notiContent"></ul>
                            </li>
                            <li class="footer"><a href="@Url.Action("Index", "Notification")">View all</a></li>
                        </ul>
                    </li>
                }

                <!-- User Account: style can be found in dropdown.less -->
                <li class="dropdown user user-menu">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                        @if (string.IsNullOrEmpty(SessionPersister.UserImageUrl))
                        {
                            <img src="~/Content/Images/default-user-image.png" class="user-image" alt="User Image">
                        }
                        else
                        {
                            <img src="@AppHelpers.MemberImage(SessionPersister.UserId, SessionPersister.UserImageUrl, SessionPersister.Username, AppConstants.AvatarProfileSize)" class="user-image" alt="User Image">
                        }
                        <span class="hidden-xs">@SessionPersister.Username</span>
                    </a>
                    <ul class="dropdown-menu">
                        <!-- User image -->
                        <li class="user-header">
                            @if (string.IsNullOrEmpty(SessionPersister.UserImageUrl))
                            {
                                <img src="~/Content/Images/default-user-image.png" class="img-circle" alt="User Image">
                            }
                            else
                            {
                                <img src="@AppHelpers.MemberImage(SessionPersister.UserId, SessionPersister.UserImageUrl, SessionPersister.Username, AppConstants.AvatarProfileSize)" class="img-circle" alt="User Image">
                            }
                            <p>
                                @if (string.IsNullOrEmpty(SessionPersister.FullName))
                                {
                                    @Header.default_full_name
                                }
                                else
                                {
                                    if (SessionPersister.Roles.Contains(AppConstants.AdminRoleName))
                                    {
                                        @(SessionPersister.FullName + " - " + @UserProfile.manager)
                                    }
                                    else
                                    {
                                        @(SessionPersister.FullName + " - " + @UserProfile.drive)
                                    }
                                }
                            </p>
                        </li>

                        <!-- Menu Footer-->
                        <li class="user-footer">
                            <div class="pull-left">
                                <a href="@Url.Action("EditProfile", "Account")" class="btn btn-default btn-flat">@Header.update_profile</a>
                            </div>
                            <div class="pull-right">
                                <a href="@Url.Action("LogOff", "Account", new { area = "" })" class="btn btn-default btn-flat">@Header.sign_out</a>
                            </div>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
    </nav>
</header>