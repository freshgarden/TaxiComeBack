@model TaxiCameBack.Website.Areas.Admin.Models.ScheduleViewModel

@{
    ViewBag.Title = "Creat Schedule";
}

@section AdminHeader
{
    <link href="@Url.Content("~/Content/jquery-ui-1.9.2.custom.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/jqsDialog/jqsDialog.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-ui-1.9.2.custom.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui.js")"></script>
    <script src="@Url.Content("~/Scripts/knockout-2.2.0.js")"></script>
    <script src="@Url.Content("~/Scripts/knockout.validation.js")"></script>
    <script src="@Url.Content("~/Content/jqsDialog/jqsDialog.js")"></script>
    <script src="@Url.Content("~/Scripts/ScheduleCreateEdit.js")"></script>
    <script src="@Url.Content("~/Scripts/aftp.js")"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?language=vi&libraries=places&sensor=false&key=AIzaSyAjnlRqvU0vljMnlPB7Y6gmBAUk4ShnAXQ"></script>
    <script>
        var source, destination;
        var autoComplete1, autoComplete2;
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();
        var options = {
            componentRestrictions: { country: "vn" }
        };
        google.maps.event.addDomListener(window, 'load', function () {
            autoComplete1 = new google.maps.places.Autocomplete(document.getElementById('BeginLocation'), options);
            autoComplete2 = new google.maps.places.Autocomplete(document.getElementById('EndLocation'), options);
            directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
            var hanoi = new google.maps.LatLng(21.0031201, 105.82013870000003);
            var mapOptions = {
                zoom: 7,
                center: hanoi
            };
            map = new google.maps.Map(document.getElementById('dvMap'), mapOptions);
            directionsDisplay.setMap(map);
            google.maps.event.addListener(autoComplete1, 'place_changed', function () {
                if ($("#BeginLocation").val() != '' && $("#EndLocation").val() != '') {
                    GetRoute();
                }
            });
            google.maps.event.addListener(autoComplete2, 'place_changed', function () {
                if ($("#BeginLocation").val() != '' && $("#EndLocation").val() != '') {
                    GetRoute();
                }
            });
        });
        $(function () {
            var container = $(this);
//            $.jqsDialog("showProgressBar");
            $('#frmCreateSchedule').submit(function (e) {
                if ($("#ScheduleGeolocations").val() === '') {
                    e.preventDefault();
                    return false;
                }
            });
            $("#StartDate").datepicker({
                dateFormat: 'dd/mm/yy',
                minDate: 0
            });
            $('input,textarea').attr('autocomplete', 'off');
            $('input').keydown(function (e) {
                if (e.keyCode === 13) {
                    return false;
                }
            });
        });


        function GetRoute() {
            //*********DIRECTIONS AND ROUTE**********************//
            source = document.getElementById("BeginLocation").value;
            destination = document.getElementById("EndLocation").value;

            var request = {
                origin: source,
                destination: destination,
                travelMode: google.maps.TravelMode.DRIVING
            };
            directionsService.route(request, function (response, status) {
                if (status === google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                    SetScheduleGeolocation(response);
                }
            });
        }

        function SetScheduleGeolocation(response) {
            var rleg = response.routes[0].legs[0];
            var wp = response.routes[0].overview_path;
            window.vm.addScheduleGeolocation([rleg.start_location.lat(), rleg.start_location.lng()]);
            for (var i = 0; i < wp.length; i++) {
                window.vm.addScheduleGeolocation([wp[i].lat(), wp[i].lng()]);
            }
            window.vm.addScheduleGeolocation([rleg.end_location.lat(), rleg.end_location.lng()]);
        }
    </script>
}

@Html.Partial("_ScheduleNavButtons")

<div class="panel">
    <div class="panel-heading">
        <h5>@ViewBag.Title</h5>
    </div>
    <div class="panel-content">
        @*        @using (Html.BeginForm("CreateSchedule", "Schedule", FormMethod.Post, new { id = "frmCreateSchedule" }))*@
        @*        {*@
        @*            @Html.ValidationSummary(false)*@
        @Html.AntiForgeryToken()

        @Html.Partial("_ScheduleField")

        <div class="submit-holder">
            <input type="button" class="btn-mvc-green" data-bind="click: saveSchedule" value="Create" />
        </div>
        @*        }*@
        <hr />
        <div id="dvMap" style="width: 100%; height: 400px; position: relative;"></div>
    </div>
</div>
<style>
    .validationMessage {
        color: red;
        font-size: 1em;
    }
</style>