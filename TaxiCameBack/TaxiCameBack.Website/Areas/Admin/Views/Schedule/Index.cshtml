@{
    ViewBag.Title = "Schedules Manager";
}

@section AdminHeader{
@*    <link href="@Url.Content("~/Content/bootstrap/css/bootstrap.min.css")" rel="stylesheet" />*@
    @Styles.Render("~/css/jquery-ui-1.9.2")
    @Styles.Render("~/css/calendar")
    <link rel="stylesheet" href="~/Scripts/plugins/fullcalendar/fullcalendar.print.css" media="print">
    <script></script>
    @Scripts.Render("~/js/jquery-ui-1.9.2")
    @Scripts.Render("~/js/calendar")
    <link href="@Url.Content("~/Content/jqsDialog/jqsDialog.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/knockout-2.2.0.js")"></script>
<script src="@Url.Content("~/Scripts/knockout.validation.js")"></script>
<script src="@Url.Content("~/Content/jqsDialog/jqsDialog.js")"></script>
<script src="@Url.Content("~/Scripts/ScheduleCreateEdit.js")"></script>
<script src="@Url.Content("~/Scripts/aftp.js")"></script>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?language=vi&libraries=places&sensor=false&key=AIzaSyAjnlRqvU0vljMnlPB7Y6gmBAUk4ShnAXQ"></script>
<script>

    var source, destination;
    var autoComplete1, autoComplete2;
    var directionsDisplay;
    var conta = $(this);
    var wps = [];
    var directionsService = new google.maps.DirectionsService();
    var options = {
        componentRestrictions: { country: "vn" }
    };
    google.maps.event.addDomListener(window, 'load', function () {
        autoComplete1 = new google.maps.places.Autocomplete(document.getElementById('BeginLocation'), options);
        autoComplete2 = new google.maps.places.Autocomplete(document.getElementById('EndLocation'), options);
        directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
        var hanoi = new google.maps.LatLng(21.0031201, 105.82013870000003);
        var mapOptions = {
            zoom: 7,
            center: hanoi
        };
        map = new google.maps.Map(document.getElementById('dvMap'), mapOptions);
        directionsDisplay.setMap(map);
        var locations = window.vm.getScheduleGeolocation;

        for (var i = 0; i < locations.length; i++) {
            console.log(locations[i][0]);
            wps.push({ location: new google.maps.LatLng(locations[i][0], locations[i][1]) });
        }

        GetRoute();

        google.maps.event.addListener(autoComplete1, 'place_changed', function () {
            if ($("#BeginLocation").val() != '' && $("#EndLocation").val() != '') {
                GetRoute();
            }
        });
        google.maps.event.addListener(autoComplete2, 'place_changed', function () {
            if ($("#BeginLocation").val() != '' && $("#EndLocation").val() != '') {
                GetRoute();
            }
        });
    });
    $(function () {
        $('#frmCreateSchedule').submit(function (e) {
            if ($("#ScheduleGeolocations").val() === '') {
                e.preventDefault();
                return false;
            }
        });
        $("#StartDate").datepicker({
            dateFormat: 'dd-mm-yy',
            minDate: 0
        });
        $('input,textarea').attr('autocomplete', 'on');
        $('input').keydown(function (e) {
            if (e.keyCode === 13) {
                return false;
            }
        });
    });


    function GetRoute() {
        //*********DIRECTIONS AND ROUTE**********************//
        source = document.getElementById("BeginLocation").value;
        destination = document.getElementById("EndLocation").value;

        var request = {
            origin: source,
            waypoints: wps,
            destination: destination,
            travelMode: google.maps.TravelMode.DRIVING
        };
        directionsService.route(request, function (response, status) {
            if (status === google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(response);
                SetScheduleGeolocation(response);

                google.maps.event.addListener(directionsDisplay, 'directions_changed', function () {
                    SetScheduleGeolocation(directionsDisplay.directions);
                });
            }
        });
    }

    function SetScheduleGeolocation(response) {
        var rleg = response.routes[0].legs[0];
        var wp = response.routes[0].overview_path;
        window.vm.clearScheduleGeolocation();
        window.vm.addScheduleGeolocation([rleg.start_location.lat(), rleg.start_location.lng()]);
        for (var i = 0; i < wp.length; i++) {
            window.vm.addScheduleGeolocation([wp[i].lat(), wp[i].lng()]);
        }
        window.vm.addScheduleGeolocation([rleg.end_location.lat(), rleg.end_location.lng()]);
    }
</script>
<style>
    .validationMessage {
        color: red;
        font-size: 1em;
    }
    .hasDatepicker{z-index:1151 !important;}
    .pac-container {
    background-color: #FFF;
    z-index: 20;
    position: fixed;
    display: inline-block;
    float: left;
}
.modal{
    z-index: 20;   
}
.modal-backdrop{
    z-index: 10;        
}​

</style>
}

@Html.Action("GetMainSchedules")
  

