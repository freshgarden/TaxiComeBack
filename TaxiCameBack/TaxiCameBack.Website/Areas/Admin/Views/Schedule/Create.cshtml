@model TaxiCameBack.Website.Areas.Admin.Models.ScheduleViewModel

@{
    ViewBag.Title = "Creat Schedule";
    Layout = "~/Areas/Admin/Views/shared/_AdminLayout.cshtml";
}

@section AdminHeader
{
    <link href="@Url.Content("~/Content/datetimepicker/jquery.datetimepicker.css")" rel="stylesheet"/>
    <link href="@Url.Content("~/Content/jqsDialog/jqsDialog.css")" rel="stylesheet"/>
    <script src="@Url.Content("~/Content/datetimepicker/jquery.datetimepicker.full.min.js")"></script>
    <script src="@Url.Content("~/Scripts/knockout-2.2.0.js")"></script>
    <script src="@Url.Content("~/Scripts/knockout.validation.js")"></script>
    <script src="@Url.Content("~/Content/jqsDialog/jqsDialog.js")"></script>
    <script src="@Url.Content("~/Scripts/ScheduleCreateEdit.js")"></script>
    <script src="@Url.Content("~/Scripts/aftp.js")"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?language=vi&libraries=places&sensor=false&key=AIzaSyAjnlRqvU0vljMnlPB7Y6gmBAUk4ShnAXQ"></script>
    <script>
        var source, destination;
        var autoComplete1, autoComplete2;
        var directionsDisplay;
        var conta = $(this);
        var wps = [];
        var directionsService = new google.maps.DirectionsService();
        var options = {
            componentRestrictions: { country: "vn" }
        };
        google.maps.event.addDomListener(window, 'load', function() {
            autoComplete1 = new google.maps.places.Autocomplete(document.getElementById('BeginLocation'), options);
            autoComplete2 = new google.maps.places.Autocomplete(document.getElementById('EndLocation'), options);
            directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': true });
            var hanoi = new google.maps.LatLng(21.0031201, 105.82013870000003);
            var mapOptions = {
                zoom: 7,
                center: hanoi
            };
            map = new google.maps.Map(document.getElementById('dvMap'), mapOptions);
            directionsDisplay.setMap(map);
            var locations = window.vm.getScheduleGeolocation;
            
            for (var i = 0; i < locations.length; i++) {
                console.log(locations[i][0]);
                wps.push({ location: new google.maps.LatLng(locations[i][0], locations[i][1]) });
            }

            GetRoute();

            google.maps.event.addListener(autoComplete1, 'place_changed', function() {
                getSearchChange();
            });
            google.maps.event.addListener(autoComplete2, 'place_changed', function() {
                getSearchChange();
            });
        });

        function getSearchChange() {
            if ($("#BeginLocation").val() != '' && $("#EndLocation").val() != '') {
                $("#BeginLocation").change();
                $("#EndLocation").change();

                GetRoute();
            }
        }
        $(function() {
            $('#frmCreateSchedule').submit(function(e) {
                if ($("#ScheduleGeolocations").val() === '') {
                    e.preventDefault();
                    return false;
                }
            });
            $.datetimepicker.setLocale('vi');
            jQuery("#StartDate").datetimepicker({
                format: 'd-m-Y H:i',
                minDate: 0,
                lang: 'vi',
                onChangeDateTime: function (dp, $input) {
                    window.vm.setStartDate(dp);
                }
            });
            $('input,textarea').attr('autocomplete', 'on');
            $('input').keydown(function(e) {
                if (e.keyCode === 13) {
                    return false;
                }
            });
        });


        function GetRoute() {
            //*********DIRECTIONS AND ROUTE**********************//
            source = document.getElementById("BeginLocation").value;
            destination = document.getElementById("EndLocation").value;

            var request = {
                origin: source,
                waypoints: wps,
                destination: destination,
                travelMode: google.maps.TravelMode.DRIVING
            };
            directionsService.route(request, function(response, status) {
                if (status === google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                    SetScheduleGeolocation(response);

                    google.maps.event.addListener(directionsDisplay, 'directions_changed', function () {
                        SetScheduleGeolocation(directionsDisplay.directions);
                    });
                }
            });
        }

        function SetScheduleGeolocation(response) {
            var rleg = response.routes[0].legs[0];
            var wp = response.routes[0].overview_path;
            window.vm.clearScheduleGeolocation();
            window.vm.addScheduleGeolocation([rleg.start_location.lat(), rleg.start_location.lng()]);
            for (var i = 0; i < wp.length; i++) {
                window.vm.addScheduleGeolocation([wp[i].lat(), wp[i].lng()]);
            }
            window.vm.addScheduleGeolocation([rleg.end_location.lat(), rleg.end_location.lng()]);
        }
    </script>
}
<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Info boxes -->
    <div class="row">
        <div class="col-md-4">
            <div class="box">
                <div class="box box-default">
                    <div class="box-header with-border">
                        <h3 class="box-title">@ViewBag.Title</h3>
                    </div>
                    <div class="box-body">
                        @*        @using (Html.BeginForm("CreateSchedule", "Schedule", FormMethod.Post, new { id = "frmCreateSchedule" }))*@
                        @*        {*@
                        @*            @Html.ValidationSummary(false)*@
                        @Html.AntiForgeryToken()

                        @Html.Partial("_ScheduleField")

                        @*        }*@
                        <hr />
                        <button class="btn btn-primary" data-bind="click: saveSchedule">Create</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="box">
                <div class="box box-default">
                    <div id="dvMap" style="height: 450px;"></div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
<style>
    .validationMessage {
        color: red;
        font-size: 1em;
    }
</style>
