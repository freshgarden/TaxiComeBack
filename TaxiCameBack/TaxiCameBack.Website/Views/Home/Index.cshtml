@using TaxiCameBack.Website.Application.Recaptcha
@using TaxiCameBack.Website.App_LocalResources
@model TaxiCameBack.Website.Models.CustomerRegistrationNewScheule
@{
    Layout = "~/Views/Shared/_Home.cshtml";
}
<link href="@Url.Content("~/Content/datetimepicker/jquery.datetimepicker.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/datetimepicker/jquery.datetimepicker.full.min.js")"></script>
<script src="@Url.Content("~/Scripts/ajaxLoader.js")"></script>

<!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
@Scripts.Render("~/js/signalr")
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>

<script>
    var ajaxLoading;
    var CustomerRegistrationNewShedule = {
        setStartDate: function (date) {
            if (!date) {
                return;
            }
            var monthsName = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            this.StartDate = date.getDate() + "-" + monthsName[date.getMonth()] + "-" + date.getFullYear() + " " + date.getHours() + ":" + date.getMinutes();
            $("#start_date_hidden").val(this.StartDate);
        }
    };
    var onBegin = function() {
        ajaxLoading = new ajaxLoader("body", { duration : 100});
    }
    var onSuccess = function (data) {
        if (ajaxLoading) ajaxLoading.remove();
        grecaptcha.reset();
        $.fancybox({ padding: 0, content: "<div id='login_form' class='box'><h3>Thông báo</h3><div class='box-content'><p>" + data.Message + "</p></div></div>" });
    };
    var onFailure = function () {
        if (ajaxLoading) ajaxLoading.remove();
    }
    $(function () {
        // Reference the auto-generated proxy for the hub.
        var notification = $.connection.notificationHub;
        // Create a function that the hub can call back to display messages.
        notification.client.addNewMessageToPage = function (message) {
            $.fancybox.close();
            setTimeout(function () {
                $.fancybox({ padding: 0, content: "<div id='login_form' class='box'><h3>Thông báo</h3><div class='box-content'><p>" + message + "</p></div></div>" });
            }, 1000);
        };
        notification.client.addNewErrorMessageToPage = function (message) {
            $.fancybox.close();
            setTimeout(function () {
                $.fancybox({ padding: 0, content: "<div id='login_form' class='box'><h3>Thông báo</h3><div class='box-content'><p>" + message + "</p></div></div>" });
            }, 1000);
        };
        // Start the connection.
        $.connection.hub.start().done(function () {
            console.log("Notification Stated");
            $('#btnCreate').click(function () {
                if ($("#customerAgreeTerm").is(':checked')) {
                    CustomerRegisterCar.DriveId = $('#DriveId').val();
                    CustomerRegisterCar.CustomerFullName = $('#customerFullName').val();
                    CustomerRegisterCar.CustomerPhoneNumber = $('#customerPhoneNumber').val();
                    CustomerRegisterCar.ScheduleId = $('#ScheduleId').val();
                    CustomerRegisterCar.NearLocation = $('#customerNearpos').val();
                    // Call the method on the hub.
                    notification.server.registerTaxi(CustomerRegisterCar);
                } else {
                    alert("Bạn cần xác nhận lại điều kiện.");
                }
            });
        });
    });
</script>
<style>
    .g-recaptcha {
        -webkit-transform: scale(0.80);
        -moz-transform: scale(0.80);
        -ms-transform: scale(0.80);
        -o-transform: scale(0.80);
        transform: scale(0.80);
        -webkit-transform-origin: 0 0;
        -moz-transform-origin: 0 0;
        -ms-transform-origin: 0 0;
        -o-transform-origin: 0 0;
        transform-origin: 0 0;
    }

    .ajax_loader {
        background: url("/Content/Images/spinner_squares_circle.gif") no-repeat center center transparent;
        width: 100%;
        height: 100%;
    }
</style>

<div class="container_12 clearfix">
    <div class="grid_8 content">
        <section id="register">
            <div class="tabbable tabbable_red">
                <ul class="nav-tabs">
                    <li class="active with_icon"><a href="#search_tab_2" data-toggle="tab"><i class="icomoon-plus"></i>@Home.lbl_register_taxi</a></li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" id="search_tab_2">
                        @using (Ajax.BeginForm("CustomerRegisterCar", "Home", new AjaxOptions
                        {
                            HttpMethod = "POST",
                            OnSuccess = "onSuccess",
                            OnBegin = "onBegin",
                            OnFailure = "onFailure"
                        }, new { id = "homepage_search" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="span6">
                                    @Html.LabelFor(x => x.BeginLocation, Home.lbl_startpoint, new { @class = "dropdown_label" })
                                    @Html.TextBoxFor(x => x.BeginLocation, new { placeholder = Home.plh_StartPoint, id = "start_point_reg", onkeypress = "return calcdir(event)" })
                                </div>
                                <div class="span6">
                                    @Html.LabelFor(x => x.EndLocation, Home.lbl_endpoint, new { @class = "dropdown_label" })
                                    @Html.TextBoxFor(x => x.EndLocation, new { placeholder = Home.plh_EndPoint, id = "end_point_reg", onkeypress = "return calcdir(event)" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="span6">
                                    @Html.LabelFor(x => x.NearLocation, Home.lbl_NearPos, new { @class = "dropdown_label" })
                                    @Html.TextBoxFor(x => x.NearLocation, new { placeholder = Home.plh_NearPos })
                                </div>
                                <div class="span6">
                                    @Html.LabelFor(x => x.StartDateDisplay, Home.lbl_startdate, new { @class = "dropdown_label" })
                                    @Html.TextBoxFor(x => x.StartDateDisplay, new { placeholder = Home.plh_TimeStart, id = "reg_start_date" })
                                    @Html.HiddenFor(x => x.StartDateHidden, new { id = "start_date_hidden" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="span6">
                                    @Html.LabelFor(x => x.CustomerFullName, Home.lbl_CustomerName, new { @class = "dropdown_label" })
                                    @Html.TextBoxFor(x => x.CustomerFullName, new { placeholder = Home.plh_FullName })
                                </div>
                                <div class="span6">
                                    @Html.LabelFor(x => x.CustomerPhoneNumber, Home.lbl_CustomerPhone, new { @class = "dropdown_label" })
                                    @Html.TextBoxFor(x => x.CustomerPhoneNumber, new { placeholder = Home.plh_PhoneNumber })
                                </div>
                            </div>
                            <div class="row">
                                <div class="span12">
                                    @Html.LabelFor(x => x.Message, Home.lbl_note, new { @class = "dropdown_label" })
                                    @Html.TextAreaFor(x => x.Message, new { placeholder = Home.plh_note })
                                </div>
                            </div>
                            <div class="row last_row">
                                <div class="span6">
                                    @Html.Recaptcha()
                                </div>
                                <div class="span6 clear_submit_buttons">
                                    <input type="submit" class="button submit yellow right" value="@Home.btn_register" style="width: 45%; height:43px;" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>

        <section id="search">
            <div class="tabbable tabbable_red">
                <ul class="nav-tabs">
                    <li class="active with_icon"><a href="#search_tab_1" data-toggle="tab"><i class="icomoon-search"></i>@Home.lbl_FindCar</a></li>
                </ul>
                <div class="tab-content">
                    <div class="active tab-pane" id="search_tab_1">
                        <form id="homepage_search" action="#">
                            <div class="row">
                                <div class="span6">
                                    <label for="type" class="dropdown_label">@Home.lbl_startpoint</label>
                                    <input id="startPoint" onkeypress="return calcdir(event)" type="text" placeholder="@Home.plh_StartPoint" name="start_position">
                                </div>
                                <div class="span6">
                                    <label for="category" class="dropdown_label">@Home.lbl_endpoint</label>
                                    <input id="endPoint" onkeypress="return calcdir(event)" type="text" placeholder="@Home.plh_EndPoint" name="end_position">
                                </div>
                            </div>
                            <div class="row">
                                <div class="span6">
                                    <label for="location" class="dropdown_label">@Home.lbl_startdate</label>
                                    <input id="timestart" type="text" placeholder="@Home.plh_TimeStart" name="start_date">
                                </div>
                            </div>
                            <div class="row last_row">
                                <div class="span5">
                                </div>
                                <div class="span7 clear_submit_buttons">
                                    <a id="locate" href="#" class="clear_filters"><i class="icon-screenshot"></i> @Home.lbl_Locate</a>
                                    <a href="#" id="switchSearchValue" class="clear_filters"><i class="icon-exchange"></i> @Home.btn_switch_title</a>
                                    <a class="button yellow right" id="searchCar">@Home.btn_search_title</a>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </section>

        <section id="vendor" class="box" style="display:none;">
            <h3><i class="icomoon-numbered-list"></i> @Home.lbl_SearchResult</h3>
            <p id="no_result" class="no_results" style="display:none;">
            </p>
            <div id="search_result" class="custom_scrollbar">
            </div>
        </section>

        <section id="item_info" class="box">
            <h3><i class="icomoon-question"></i> @Home.lbl_UserGuide</h3>
            <div class="box-content">
                <h5>Hướng dẫn tìm kiếm xe Taxi</h5>
                <p>Nhập địa chỉ đến và đi, thời gian xuất hành vào khung tìm kiếm hoặc click vào icon <i class="icon-screenshot"></i> để hệ thống tự lấy vị trí hiện tại của bạn.</p>
                <p>Sau đó click chuột vào nút <strong>Tìm kiếm</strong> để bắt đầu quá trình tìm kiếm taxi. Hệ thống sẽ hiển thị danh sách các chuyến xe phù hợp với lộ trình của bạn, hãy đăng kí và liên hệ với tài xế để có được thông tin cần thiết.</p>
                <h5>Hướng dẫn đăng ký xe Taxi</h5>
                <p>Nhập địa chỉ đến và đi, thời gian xuất hành, vị trí đón, họ tên và số điện thoại của bạn cũng như ghi chú vào khung đăng kí.</p>
                <p>Sau đó click chuột vào nút <strong>Đăng ký</strong> để thực hiện đăng ký chuyến xe. Chúng tôi sẽ liên hệ với bạn khi có chuyến xe phù hợp.</p>
            </div>
        </section>

        <div class="login_form_modal_container">
            <div id="login_form" class="box">
                <h3>@Home.lbl_register</h3>
                <div class="box-content clearfix">
                    <form id="cus_register" action="#">
                        <div class="row">
                            <label for="customerFullName" class="dropdown_label">@Home.lbl_CustomerName</label>
                            <input id="customerFullName" type="text" placeholder="@Home.plh_FullName" name="fullname" maxlength="20">
                        </div>
                        <div class="row">
                            <label for="customerPhoneNumber" class="dropdown_label">@Home.lbl_CustomerPhone</label>
                            <input id="customerPhoneNumber" type="text" placeholder="@Home.plh_PhoneNumber" name="phoneNumber" maxlength="11">
                        </div>
                        <div class="row">
                            <label for="customerNearpos" class="dropdown_label">@Home.lbl_NearPos</label>
                            <input id="customerNearpos" type="text" placeholder="@Home.plh_NearPos" name="nearpos" maxlength="50">
                        </div>
                        <div class="row">
                            <label for="customerAgreeTerm" class="custom_checkbox custom_checkbox_light"><input type="checkbox" name="customerAgreeTerm" id="customerAgreeTerm">@Home.lbl_reg_note</label>
                            <br /><label class="custom_checkbox_light" id="lbl_custom_agreeterm"></label>
                        </div>
                        <input type="hidden" id="DriveId" />
                        <input type="hidden" id="ScheduleId" />
                        <a class="button submit red right" id="btnCreate">@Home.btn_register</a>
                    </form>
                </div>
            </div>
        </div>

    </div>
    <div class="grid_4 sidebar">
        <div class="box">
            <h3><i class="icomoon-book"></i> Danh sách khách hàng</h3>
            <div class="box-content">
                <p class="centered_content">
                    <a href="~/Home/ViewListCustomerRegister" class="button red">Khách hàng đã đăng ký đặt xe</a>
                </p>
                <p class="centered_content">
                    <a href="~/Home/ViewListCustomerRegisterComeback" class="button red">Khách hàng đã đăng ký xe quay về</a>
                </p>
            </div>
        </div>

        <div class="box">
            <h3><i class="icomoon-list"></i> @Home.lbl_Find_Car_By_Location</h3>
            <div class="box-content widget-categories">
                <ul>
                    <li><a href="#">Nam Định<span>50</span></a></li>
                    <li><a href="#">Thái Bình<span>25</span></a></li>
                    <li><a href="#">Lào Cai<span>20</span></a></li>
                    <li><a href="#">Yên Bái<span>10</span></a></li>
                    <li><a href="#">Thanh Hóa<span>5</span></a></li>
                </ul>
            </div>
        </div>

        <div class="box">
            <h3><i class="icomoon-address-book"></i> Về chúng tôi</h3>
            <div class="box-content">
                <p>Ứng dụng tìm kiếm taxi đường dài, giá rẻ. Chúng tôi sẽ đem lại cho Quí khách hàng những chọn lựa tốt với mức chi phí thấp nhất.</p>
                <ul>
                    <li><i class="icomoon-checkmark"></i> Đảm bảo giá tốt nhất</li>
                    <li><i class="icomoon-star"></i> Cam kết chất lượng hoàn hảo</li>
                    <li><i class="icomoon-sunglasses"></i> Tiện ích, dịch vụ đi kèm</li>
                </ul>
            </div>
        </div>

        <div class="box">
            <h3><i class="icomoon-phone"></i> @Home.lbl_sp_online</h3>
            <div class="box-content widget_online_support">
                <div class="row">
                    <img src="~/Content/Images/frontend-images/admin.jpg" alt="" class="span6">
                    <div class="span6">
                        <span class="online_support_title">Nguyễn Xuân Phúc</span>
                        <p>@Home.lbl_administator</p>
                    </div>
                </div>
                <a href="#" class="button blue big wide"><i class="icomoon-volume-medium"></i> 098.577.6625</a>
            </div>
        </div>

    </div>
</div>
<div id="mapdirdd" style="display:none;">
</div>
@section HomeFooter{
    <script type="text/javascript">
        $(function () {
            $.datetimepicker.setLocale('vi');
            jQuery("#timestart").datetimepicker({
                format: 'd-m-Y',
                timepicker: false,
                minDate: 0,
                lang: 'vi',
                onChangeDateTime: function (dp, $input) {
                    SearchModel.setStartDate(dp);
                }
            });
            jQuery("#reg_start_date").datetimepicker({
                format: 'd-m-Y H:i',
                minDate: 0,
                lang: 'vi',
                onChangeDateTime: function (dp, $input) {
                    CustomerRegistrationNewShedule.setStartDate(dp);
                }
            });
        });

        function RegisterCar(data) {
            $.fancybox({
                href: "#login_form",
                padding: 0,
                onClosed: function () {
                    $("#login_error").hide();
                }
            });
            document.getElementById("DriveId").value = data.DriveId;
            document.getElementById("ScheduleId").value = data.ScheduleId;
        }

        var CustomerRegisterCar = {
            DriveId: "",
            CustomerFullName: "",
            CustomerPhoneNumber: "",
            NearLocation: "",
            ScheduleId: ""
        }

        var SearchModel = {
            StartLocationLat: "",
            StartLocationLng: "",
            EndLocationLat: "",
            EndLocationLng: "",
            CarType: "",
            StartDate: "",
            setStartDate: function (date) {
                var monthsName = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
                this.StartDate = date.getDate() + "-" + monthsName[date.getMonth()] + "-" + date.getFullYear();
            }
        }

        function FormatPhone(phonenumber)
        {
            if (!phonenumber) {
                return "undefined";
            }

            if (phonenumber.toString().length === 10) {
                return phonenumber.replace(/(\d\d\d)(\d\d\d)(\d\d\d\d)/, '$1.$2.$3');
            }

            return phonenumber.replace(/(\d\d\d\d)(\d\d\d)(\d\d\d\d)/, '$1.$2.$3');
        }

        $('#searchCar').click(function () {
            if (startPointPlace != null && endPointPlace != null) {
                ajaxLoading = new ajaxLoader("body", { duration: 100 });
                SearchModel.StartLocationLat = startPointPlace.geometry.location.lat();
                SearchModel.StartLocationLng = startPointPlace.geometry.location.lng();
                SearchModel.EndLocationLat = endPointPlace.geometry.location.lat();
                SearchModel.EndLocationLng = endPointPlace.geometry.location.lng();
                SearchModel.CarType = '';
                $.ajax({
                    url: "/Home/Search",
                    type: 'POST',
                    data: JSON.stringify(SearchModel),
                    dataType: 'json',
                    contentType: "application/jsonrequest; charset=utf-8",
                    success: function (data) {
                        $('#vendor').css("display", "block");
                        $('#search_result').empty();
                        if (data.length === undefined) {
                            ajaxLoading.remove();
                            $('#no_result').css("display", "block");
                            $('#no_result').html("Không có kết quả nào được tìm thấy");
                            $('#search_result').css("display", "none");
                        } else {
                            ajaxLoading.remove();
                            getDistanceAndTime();
                            $('#no_result').css("display", "none");
                            $('#search_result').css("display", "block");

                            for (var count in data) {
                                var routeData = JSON.stringify(data[count]);
                                var startDate = data[count].StartDate;
                                var result_html = $("<div class='box-content clearfix'><div class='half left'><div class='row'>" +
                                    "<img src='/Content/Images/frontend-images/car_image.jpg' alt='' class='span4'>" +
                                    "<div class='span8 vendor_info'><span class='vendor_title'>" + data[count].UserFullName + "</span><span>Thành phố: <strong>Hà nội</strong></span><span>Loại xe: <strong>4 chỗ ngồi</strong></span><span>Thời gian: <strong>" + parseJsonDate(startDate) + "</strong></span></div>" +
                                    "</div></div>" +
                                    "<div class='half right'><a href='#' onclick='RegisterCar(" + routeData + ");return false;' class='button blue big wide show_login_form'><i class='icomoon-volume-medium'></i>" + FormatPhone(data[count].UserPhoneNumber) + "</a></div>" +
                                    "</div>");
                                $('#search_result').append(result_html);
                            }
                        }

                    }
                });
            }
        })

        //$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        //    $('#vendor').css("display", "none");
        //    var target = $(e.target).attr("href") // activated tab
        //    if(target == "#search_tab_2")
        //    {
        //        $(".tab-content").css("background", "#d84949");
        //        $(".tab-content").css("border", "1px solid #b83e3e");
        //    }
        //    else
        //    {
        //        $(".tab-content").css("background", "#3781cf");
        //        $(".tab-content").css("border", "1px solid #3678b5");
        //    }
        //});

        function parseJsonDate(jsonDateString) {
            var today = new Date(parseInt(jsonDateString.replace('/Date(', '')));
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!

            var yyyy = today.getFullYear();
            var hh = addZero(today.getHours());
            var m = addZero(today.getMinutes());
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }
            return today = dd + '/' + mm + '/' + yyyy + ' - ' + hh + ':' + m;
        }

        function addZero(i) {
            if (i < 10) {
                i = "0" + i;
            }
            return i;
        }
        var map = null;
        var latValue = 21.022736;
        var lngValue = 105.8019441;
        var startPointPlace = null;
        var endPointPlace = null;
        var origin_place_id = null;
        var destination_place_id = null;
        var directionsService = null;
        var directionsDisplay = null;
        var travel_mode = null;

        function loadScript(src) {
            var script = document.createElement("script");
            script.type = "text/javascript";
            document.getElementsByTagName("head")[0].appendChild(script);
            script.src = src;
        }

        loadScript('http://maps.google.com/maps/api/js?language=vi&libraries=places&sensor=false&key=AIzaSyDXIEOJsracks0-TTPmqvEnnMG3YPyh36U');

        function initialize() {
            var mapOptions = {
                mapTypeControl: true
            };
            map = new google.maps.Map(document.getElementById('mapdirdd'),
                mapOptions);
            directionsDisplay = new google.maps.DirectionsRenderer;
            directionsService = new google.maps.DirectionsService;
            travel_mode = google.maps.TravelMode.DRIVING
            directionsDisplay.setMap(map);
            var myCenter = new google.maps.LatLng(latValue, lngValue);


            var geocoder = new google.maps.Geocoder;
            var infowindow = new google.maps.InfoWindow();

            var latlng = { lat: latValue, lng: lngValue };
            geocoder.geocode({ 'location': latlng }, function (results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        infowindow.setContent(results[1].formatted_address);
                    }
                }
            });
            google.maps.event.addDomListener(window, 'load', initialize);
        }

        $("#locate").click(function () {
            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(locate, showError);
            }
        });

        function showError(error) {
            switch (error.code) {
            case error.PERMISSION_DENIED:
                console.log("User denied the request for Geolocation.")
                break;
            case error.POSITION_UNAVAILABLE:
                console.log("Location information is unavailable.")
                break;
            case error.TIMEOUT:
                console.log("The request to get user location timed out.")
                break;
            case error.UNKNOWN_ERROR:
                console.log("An unknown error occurred.")
                break;
            }
        }

        function locate(position) {
            latValue = position.coords.latitude;
            lngValue = position.coords.longitude;
            initialize();
            var latlng = { lat: latValue, lng: lngValue };
            var geocoder = new google.maps.Geocoder;
            geocoder.geocode({ 'location': latlng }, function (results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        origin_place_id = results[1].place_id;
                        startPointPlace = results[1];
                        document.getElementById('startPoint').value = results[1].formatted_address;
                    }
                }
            });
        }

        function calcdir(event) {

            var options = {
                componentRestrictions: { country: 'vn' } //Vietnam only
            };

            // Create the search box and link it to the UI element.
            var startPoint = document.getElementById('startPoint');
            var startPointReg = document.getElementById('start_point_reg');
            var startPointSearchBox = new google.maps.places.Autocomplete(startPoint, options);
            var startPointRegisterBox = new google.maps.places.Autocomplete(startPointReg, options);

            startPointSearchBox.addListener('place_changed', function () {
                startPointPlace = startPointSearchBox.getPlace();
                if (!startPointPlace.geometry) {
                    window.alert("Autocomplete's returned place contains no geometry");
                    return;
                }

                // If the place has a geometry, store its place ID and route if we have
                // the other place ID
                origin_place_id = startPointPlace.place_id;
            });

            startPointRegisterBox.addListener('place_changed', function () {
                startPointPlace = startPointRegisterBox.getPlace();
                if (!startPointPlace.geometry) {
                    window.alert("Autocomplete's returned place contains no geometry");
                    return;
                }

                // If the place has a geometry, store its place ID and route if we have
                // the other place ID
                origin_place_id = startPointPlace.place_id;
            });

            var endPoint = document.getElementById('endPoint');
            var endPointReg = document.getElementById('end_point_reg');
            var endPointSearchBox = new google.maps.places.Autocomplete(endPoint, options);
            var endPointRegisterBox = new google.maps.places.Autocomplete(endPointReg, options);

            endPointSearchBox.addListener('place_changed', function () {
                endPointPlace = endPointSearchBox.getPlace();
                if (!endPointPlace.geometry) {
                    window.alert("Autocomplete's returned place contains no geometry");
                    return;
                }

                // If the place has a geometry, store its place ID and route if we have
                // the other place ID
                destination_place_id = endPointPlace.place_id;
            });

            endPointRegisterBox.addListener('place_changed', function () {
                endPointPlace = endPointRegisterBox.getPlace();
                if (!endPointPlace.geometry) {
                    window.alert("Autocomplete's returned place contains no geometry");
                    return;
                }

                // If the place has a geometry, store its place ID and route if we have
                // the other place ID
                destination_place_id = endPointPlace.place_id;
            });
        }

        String.format = function() {
            var s = arguments[0];
            for (var i = 0; i < arguments.length - 1; i++) {       
                var reg = new RegExp("\\{" + i + "\\}", "gm");             
                s = s.replace(reg, arguments[i + 1]);
            }
            return s;
        }

        function getDistanceAndTime() {
            var service = new google.maps.DistanceMatrixService();
            service.getDistanceMatrix({
                origins: [document.getElementById('startPoint').value],
                destinations: [document.getElementById('endPoint').value],
                travelMode: google.maps.TravelMode.DRIVING,
                unitSystem: google.maps.UnitSystem.METRIC,
                avoidHighways: false,
                avoidTolls: false
            }, function (response, status) {
                if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                    var distance = response.rows[0].elements[0].distance.text;
                    var duration = response.rows[0].elements[0].duration.text;
                    $("#lbl_custom_agreeterm").empty();
                    $("#lbl_custom_agreeterm").append(String.format("@Home.lbl_reg_note2", distance));
                } else {
                    alert("Unable to find the distance via road.");
                }
            });
        }

        $("#switchSearchValue").click(function () {
            var startPoint = document.getElementById('startPoint');
            var endPoint = document.getElementById('endPoint');
            var flag = startPoint.value;
            startPoint.value = endPoint.value;
            endPoint.value = flag;
            var placeFlag = startPointPlace;
            startPointPlace = endPointPlace;
            endPointPlace = placeFlag;
            var flagDirection = origin_place_id;
            origin_place_id = destination_place_id;
            destination_place_id = flagDirection;
        });
    </script>
}